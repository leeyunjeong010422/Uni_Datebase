import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class OracleDB {

	Scanner sc = new Scanner(System.in);
	Connection conn = null;
	PreparedStatement pstmt = null;
	Statement stmt = null;
	ResultSet rs;
	String strArgs[] = new String[4];

	public void sqlQuery() {
		System.out.println("\n원하는 쿼리를 선택하세요.\n" + "1. select | 2. insert | 3. update | 4. delete | 0. exit");

		int sel = sc.nextInt();

		try {
			try {
				Class.forName("oracle.jdbc.driver.OracleDriver");
				conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "system", "0422");

				// System.out.println("DB 연결 됐는데?");

				// 데이터 조회
				// 1. statement 객체 생성
				stmt = conn.createStatement();
			} catch (ClassNotFoundException e) {
				e.printStackTrace();
			} catch (SQLException e) {
				e.printStackTrace();
			}

			switch (sel) {
			case 1:
				sqlSelect();
				sqlQuery();
				break;
			case 2:
				sqlInsert();
				sqlQuery();
				break;
			case 3:
				sqlUpdate();
				sqlQuery();
				break;
			case 4:
				sqlDelete();
				sqlQuery();
				break;
			case 0:
				System.exit(0);
				break;
			default:
				break;
			}
			// 5. 생성된 모든 객체들을 close()메소드로 메모리 해제: 생성된 순서의 역순

		} finally {
			try {
				stmt.close();
			} catch (Exception e) {

			}
			try {
				conn.close();
			} catch (Exception e) {
				// TODO: handle exception
			}

		}
	}

	public void sqlSelect() {

		System.out.println("\n1.전체 검색 | 2.상품코드 검색");
		int sel = sc.nextInt();

		if (sel == 1) {
			try {
				String sql = "select * from goodsinfo";
				pstmt = conn.prepareStatement(sql);
				rs = pstmt.executeQuery();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		} else if (sel == 2) {

			System.out.println("검색할 상품코드 입력: ");
			int codeNum = sc.nextInt();
			try {
				String sql = "select * from goodsinfo where code = ?";
				pstmt = conn.prepareStatement(sql);
				pstmt.setInt(1, codeNum);
				rs = pstmt.executeQuery();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}

		System.out.println("상품코드   상품명 \t\t가격   제조사");
		System.out.println("===============================");

		try {
			while (rs.next()) {
				String code = rs.getString("code");
				String name = rs.getString("name");
				int price = rs.getInt("price");
				String maker = rs.getString("maker");
				System.out.printf("%5s %s \t %8d %s\n", code, name, price, maker);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public void sqlInsert() {
		System.out.println("경고: 입력 데이터는 상품코드 상품명 가격 제조사 순으로 입력하세요.");
		System.out.print("상품코드: ");
		String code = sc.next();
		System.out.print("상품명: ");
		String name = sc.next();
		System.out.print("가격: ");
		int price = sc.nextInt();
		System.out.print("제조사: ");
		String maker = sc.next();

		try {
			String sql = "INSERT INTO goodsinfo (code, name, price, maker) VALUES (?, ?, ?, ?)";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, code);
			pstmt.setString(2, name);
			pstmt.setInt(3, price);
			pstmt.setString(4, maker);
			pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}

		System.out.println("새로운 상품 정보가 추가되었습니다.");
	}

	public void sqlUpdate() {
	    
		try {
	        String sql = "SELECT * FROM goodsinfo";
	        pstmt = conn.prepareStatement(sql);
	        rs = pstmt.executeQuery();

	        System.out.println("현재 상품 정보");
	        System.out.println("상품코드   상품명 \t\t가격   제조사");
	        System.out.println("===============================");
	        while (rs.next()) {
	            String code = rs.getString("code");
	            String name = rs.getString("name");
	            int price = rs.getInt("price");
	            String maker = rs.getString("maker");
	            System.out.printf("%5s %s \t %8d %s\n", code, name, price, maker);
	        }
	    } catch (SQLException e) {
	        e.printStackTrace();
	    }

	    System.out.println("\n수정할 상품코드를 입력하세요: ");
	    int codeNum = sc.nextInt();

	    System.out.println("\n1.상품명 | 2.가격 | 3.제조사");
	    int colNum = sc.nextInt();

	    System.out.println("\n변경할 값을 입력하세요: ");
	    String change = sc.next();

	    try {
	        String sql;
	        switch (colNum) {
	            case 1:
	                sql = "UPDATE goodsinfo SET name=? WHERE code=?";
	                pstmt = conn.prepareStatement(sql);
	                pstmt.setString(1, change);
	                pstmt.setInt(2, codeNum);
	                break;
	            case 2:
	                sql = "UPDATE goodsinfo SET price=? WHERE code=?";
	                pstmt = conn.prepareStatement(sql);
	                pstmt.setInt(1, Integer.parseInt(change));
	                pstmt.setInt(2, codeNum);
	                break;
	            case 3:
	                sql = "UPDATE goodsinfo SET maker=? WHERE code=?";
	                pstmt = conn.prepareStatement(sql);
	                pstmt.setString(1, change);
	                pstmt.setInt(2, codeNum);
	                break;
	            default:
	                System.out.println("올바른 값을 입력하세요.");
	                return;
	        }

	        int result = pstmt.executeUpdate();
	        if (result > 0) {
	            System.out.println("수정되었습니다.");
	        } else {
	            System.out.println("수정에 실패했습니다.");
	        }
	    } catch (SQLException e) {
	        e.printStackTrace();
	    }
	}

	public void sqlDelete() {
		try {
	        String sql = "SELECT * FROM goodsinfo";
	        pstmt = conn.prepareStatement(sql);
	        rs = pstmt.executeQuery();

	        System.out.println("현재 상품 정보");
	        System.out.println("상품코드   상품명 \t\t가격   제조사");
	        System.out.println("===============================");
	        while (rs.next()) {
	            String code = rs.getString("code");
	            String name = rs.getString("name");
	            int price = rs.getInt("price");
	            String maker = rs.getString("maker");
	            System.out.printf("%5s %s \t %8d %s\n", code, name, price, maker);
	        }
	    } catch (SQLException e) {
	        e.printStackTrace();
	    }
	    
	    System.out.print("\n삭제할 상품의 코드를 입력하세요: ");
	    int codeNum = sc.nextInt();
	    
	    try {
	        String sql = "DELETE FROM goodsinfo WHERE code=?";
	        pstmt = conn.prepareStatement(sql);
	        pstmt.setInt(1, codeNum);
	        pstmt.executeUpdate();
	        System.out.println("삭제가 완료되었습니다.");
	    } catch (SQLException e) {
	        e.printStackTrace();
	    }
	}
}
