import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class OracleDB {
	
	 Scanner sc = new Scanner(System.in);
	 Connection conn = null;
	 Statement stmt = null;
	 ResultSet rs;
	 String strArgs[] = new String[4];
	 PreparedStatement pstmt = null;
	
//	public static void main(String[] args) {
//		sqlQuery();
//	}
	
	public  void sqlQuery() {
		System.out.println("\n원하는 쿼리를 선택하세요. \n1.select 2.insert 3.update 4.delete 0.exit ");
		
		int sel = sc.nextInt();
		
		try {
			try {
				Class.forName("oracle.jdbc.driver.OracleDriver");
				conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","601");
				
				System.out.println("DB연결성공!!!");
				
				//데이터조회
				//1.Statement 객체 생성
				stmt = conn.createStatement();
				
			} catch (ClassNotFoundException e) {
				e.printStackTrace();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
			switch (sel) {
			case 1: 
				sqlSelect();
				sqlQuery();
				break;
			
			case 2: 
				sqlInsert();
				sqlQuery();
				break;
			
			case 3: 
				sqlUpdate();
				sqlQuery();
				break;
			
			case 4: 
				sqlDelete();
				sqlQuery();
				break;
			
			case 0: 
				System.exit(0);
				break;
				
			default:
				break;				
			}
			//5.생성된 모든 객체들을 close()메소드를 메모리 해제:생성된 순서의 역순
			
		} finally {
			try {
				stmt.close();
			} catch (Exception e) {
				
			}
			
			try {
				conn.close();
			} catch (Exception e) {
				
			}
			
		}
	}
	public  void sqlSelect() {
		
		System.out.println("1.전체검색  2.상품코드검색");
		int sel = sc.nextInt();
		if(sel == 1) {
			try {
				String sql = "select * from goodsinfo";
				pstmt = conn.prepareStatement(sql);
				rs = pstmt.executeQuery();
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		else if(sel == 2) {
			System.out.println("검색할 상품코드를 입력: ");
			int codeNum = sc.nextInt();
			
			try {
				String sql = "select * from goodsinfo where code = ?";
				pstmt = conn.prepareStatement(sql);
				pstmt.setInt(1, codeNum);
				rs = pstmt.executeQuery();
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
			}
			
		
		
		
		
		System.out.println("상품코드 상품명 \t\t가격 제조사");
		System.out.println("------------------------------------");
		
		try {
			while(rs.next()) {
				String code = rs.getString("code");
				String name = rs.getString("name");
				int price = rs.getInt("price");
				String maker = rs.getString("maker");
				System.out.printf("%5s %s \t %8d %s \n",code ,name,price,maker);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}
	public  void sqlInsert() {
		System.out.println("경고:입력 데이터는 상품코드 상품명 가격 제조사 순으로 입력하시오!!");
	
		strArgs[0] = sc.next();
		strArgs[1] = sc.next();
		strArgs[2] = sc.next();
		strArgs[3] = sc.next();
		
		try {
			int rowNum = stmt.executeUpdate("insert into goodsinfo(code,name,price,maker)"
					+"values ('" + strArgs[0] + "','" + strArgs[1] + "'," + strArgs[2] + ",'" +strArgs[3]+"')");
			
			System.out.println(rowNum + "행이 추가되었습니다.");
			sqlSelect();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}
	public  void sqlUpdate() {
		sqlSelect();
		System.out.println("변경할 상품코드를 선택하시오: ");
		String codeNum = sc.next();
		
		System.out.println("변경할 내용을 선택하세요 : 1.상품명 2.가격 3.제조사");
		int sel  = sc.nextInt();
		
		if(sel == 1) {
			System.out.println("변경할 상품명 입력 : ");
			String chName = sc.next();
			
			try {
				int row = stmt.executeUpdate("update goodsinfo set name = '" 
			+ chName + "' where code = " + codeNum);
				sqlSelect();
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}else if(sel == 2) {
			System.out.println("변경할 가격 입력 : ");
			int chPrice = sc.nextInt();
			
			try {
				int row = stmt.executeUpdate("update goodsinfo set price = '" 
			+ chPrice + "' where code = " + codeNum);
				sqlSelect();
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}else if(sel == 3) {
			System.out.println("변경할 제조사 입력 : ");
			String chMaker = sc.next();
			
			try {
				int row = stmt.executeUpdate("update goodsinfo set maker = '" 
			+ chMaker + "' where code = " + codeNum);
				sqlSelect();
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		
	}
	public  void sqlDelete() {
		sqlSelect();
		System.out.println("삭제할 상품번호를 선택하시오 : ");
		int codeNum = sc.nextInt();
		
		try {
			int row = stmt.executeUpdate("delete from goodsinfo where code = " + codeNum);
			sqlSelect();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		
			
		
		
		
		
	}

}



//OracleMain

public class OracleMain {
	public static void main(String[] args) {
		OracleDB db = new OracleDB();
		
		db.sqlQuery();
	}
}

